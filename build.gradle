apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:4.10'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://libraries.minecraft.net/"
    }
    flatDir {
        name "fileRepo"
        dirs "repo"
    }
}

group = 'net.minecraftforge'
archivesBaseName = 'installer'
version = '1.4'
targetCompatibility = '1.6'
sourceCompatibility = '1.6'

dependencies {
    compile 'net.sf.jopt-simple:jopt-simple:4.5'
    compile 'net.sourceforge.argo:argo:3.7'
    compile 'com.google.guava:guava:14.0'
    compile 'org.tukaani:xz:1.3'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task fatJar(type: Jar, dependsOn: jar) {
    inputs.file jar.archivePath
    from(configurations.compile.collect { zipTree(it).matching { include '**/*.class' } })
    manifest { attributes 'Main-Class': 'net.minecraftforge.installer.SimpleInstaller' }
}

fatJar.doFirst {
    from zipTree(jar.archivePath)
}


task shrinkJar(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
    inputs.file fatJar.archivePath
    ext {
        outDir = file("${buildDir}/proguard")
        obfuscatedJar = "${outDir}/${jar.baseName}.jar"
    }
    outDir.mkdirs()

    injars jar.archivePath
    outjars obfuscatedJar
    libraryjars configurations.compile
    configuration 'proguard.pro'
}

task shrinkOutput(type: Jar, dependsOn: shrinkJar) {
    classifier = 'shrunk'
    from zipTree(shrinkJar.obfuscatedJar)
    manifest { attributes 'Main-Class': 'net.minecraftforge.installer.SimpleInstaller' }
}

artifacts {
    archives fatJar
    archives sourcesJar
    archives shrinkOutput
}

jar {
    classifier = 'thin'
    exclude 'argo/**'
    manifest { attributes 'Main-Class': 'net.minecraftforge.installer.SimpleInstaller' }
}
/*
uploadArchives {
    repositories {
        add getProject().repositories.mavenLocal()
    }
    repositories.mavenDeployer {
        configuration = configurations.deployJars

        if (project.hasProperty("filesmaven")) {
            logger.info('Publishing to files server')
            repository(url: project.filesmaven.url) {
                authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
            }
        } else {
            logger.info('Publishing to repo folder')
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
        }
        pom.project {
            name project.archivesBaseName
            packaging 'jar'
            description 'Minecraft Forge Installer'
            url 'https://github.com/MinecraftForge/Installer'

            scm {
                url 'https://github.com/MinecraftForge/Installer'
                connection 'scm:git:git://github.com/MinecraftForge/Installer.git'
                developerConnection 'scm:git:git@github.com:MinecraftForge/Installer.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/MinecraftForge/Installer/issues'
            }

            developers {
                developer {
                    id 'cpw'
                    name 'cpw'
                    roles { role 'developer' }
                }
                developer {
                    id 'LexManos'
                    name 'Lex Manos'
                    roles { role 'developer' }
                }
            }
        }
    }
}*/

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}
