import java.security.MessageDigest

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://files.minecraftforge.net/maven/' }
    maven { url = 'https://libraries.minecraft.net/' }
}

static String sha1(File file) {
    MessageDigest md = MessageDigest.getInstance('SHA-1')
    file.eachByte(4096) {bytes, size ->
        md.update(bytes, 0, size)
    }
    return md.digest().collect {String.format "%02x", it}.join()
}

static String md5(File file) {
    MessageDigest md = MessageDigest.getInstance('MD5')
    file.eachByte(4096) {bytes, size ->
        md.update(bytes, 0, size)
    }
    return md.digest().collect {String.format "%02x", it}.join()
}

def artifactTree(repo, artifact, transitive) {
    if (!project.ext.has('tree_resolver'))
        project.ext.tree_resolver = 1
    def cfg = project.configurations.create('tree_resolver_' + project.ext.tree_resolver++)
    cfg.transitive = transitive
    def dep = project.dependencies.create(artifact)
    cfg.dependencies.add(dep)
    def files = cfg.resolve()
    cfg.resolvedConfiguration.resolvedArtifacts.each {
        def art = [
            group: it.moduleVersion.id.group,
            name: it.moduleVersion.id.name,
            version: it.moduleVersion.id.version,
            classifier: it.classifier,
            extension: it.extension,
            file: it.file
        ]
        def key = art.group + ':' + art.name
        def folder = "${art.group.replace('.', '/')}/${art.name}/${art.version}/"
        def filename = "${art.name}-${art.version}"
        if (art.classifier != null)
            filename += "-${art.classifier}"
        filename += ".${art.extension}"
        def path = "${folder}${filename}"
        
        def desc = "${art.group}:${art.name}:${art.version}"
        if (art.classifier != null)
            desc += ":${art.classifier}"
        if (art.extension != 'jar')
            desc += "@${art.extension}"
        
        def url = "https://libraries.minecraft.net/${path}"
        if (checkExists(url)) {
            println("Mojang  Artifact: ${desc}")
        } else {
            url = "https://files.minecraftforge.net/maven/${path}"
            if (checkExists(url)) {
                println("Forge   Artifact: ${desc}")
            } else {
                println("Pending Artifact: ${desc}")
                def target = project.file("${repo}/${folder}")
                target.mkdirs()
                copy {
                    from art.file
                    into target
                    rename { filename }
                }
                project.file("${target}/${filename}.sha1").text = sha1(it.file)
                project.file("${target}/${filename}.md5").text = md5(it.file)
            }
        }
    }
}

def checkExists(url) {
    def code = new URL(url).openConnection().with {
        requestMethod = 'HEAD'
        connect()
        responseCode
    }
    return code == 200
}
//TODO: Make Forge's build explode if a file is missing from our repo
tasks.register('artifacts') {
    doLast {
        file('dep_repo').deleteDir()
        [
            'com.google.code.findbugs:jsr305:3.0.1'
        ].forEach{art -> artifactTree('dep_repo', art, false)}
    }
}
